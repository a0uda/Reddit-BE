openapi: 3.0.0
info:
  version: "1.0"
  title: Code Anatomy API - Community
  description: >-
    This API is designed for our software engineering project, which aims to
    create a simplified version of Reddit. We are adopting an API-first or
    Design-first approach, which means the APIâ€™s structure and documentation are
    being established prior to implementation. This approach may lead to
    modifications as we progress with the implementation. However, we anticipate
    that the fundamental aspects such as query parameters, request and response
    bodies, and status codes will remain relatively stable. Please note that as
    the project evolves, updates to this documentation will be made to reflect
    any changes.

##################################################################################### Servers #####################################################################################
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/FatemaKotb/Community-Fatema-Individual/1.0

  - url: "{protocol}://api.reddit.com/v1"
    description: Production server (uses live data)
    variables:
      protocol:
        enum:
          - http
          - https
        default: https

  - url: "{protocol}://sandbox-api.reddit.com:{port}/v1"
    description: Sandbox server (uses test data)
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      port:
        enum:
          - "443"
          - "8443"
        default: "8443"

##################################################################################### Components #####################################################################################
components:
  schemas:
    widget: #why is this array ?
      type: object
      properties:
        members_nickname:
          type: string
        currently_viewing_nickname:
          type: string
        description:
          type: string

    UpdateRule:
      type: object
      required:
        - rule_id

      properties:
        rule_id:
          type: string
        community_name: #community name is required to validate it has no duplicate titles after updating
          type: string
        rule_title:
          type: string

        rule_order:
          type: number
          minimum: 1
        applies_to:
          type: string
          enum:
            - posts_and_comments
            - posts_only
            - comments_only
        report_reason:
          type: string
        full_description:
          type: string
    Rule:
      type: object
      required:
        - community_name
      properties:
        community_name:
          type: string
        rule_title:
          type: string

        rule_order:
          type: number
          minimum: 1
        applies_to:
          type: string
          enum:
            - posts_and_comments
            - posts_only
            - comments_only
        report_reason:
          type: string
        full_description:
          type: string
    RuleWithoutOrder:
      type: object
      required:
        - rule_title
      properties:
        community_name:
          type: string
        rule_title:
          type: string
        applies_to:
          type: string
          enum:
            - posts_and_comments
            - posts_only
            - comments_only
        report_reason:
          type: string
        full_description:
          type: string

    ################################################## Community - General Settings Schema ###############################
    community_general_settings_schema:
      type: object
      properties:
        description:
          type: string
        welcome_message:
          type: object
          properties:
            send_welcome_message_flag:
              type: boolean
              default: false
            message:
              type: string
        language:
          type: string
          default: "English"
        region:
          type: string
        visibility:
          type: string
          enum: ["public", "private", "restricted"]
        nsfw_flag:
          type: boolean
          default: false
        accepting_requests_to_join:
          type: boolean
          default: true
        approved_users_have_the_ability_to:
          type: string
          enum: ["comment only", "post only", "comment and post"]
          default: "post only"

    ################################################## Community - Content Controls Settings Schema ###############################
    community_content_controls_schema:
      type: object
      properties:
        providing_members_with_posting_guidlines:
          type: object
          properties:
            flag:
              type: boolean
              default: false
            guidline_text:
              type: string
        require_words_in_post_title:
          type: object
          properties:
            flag:
              type: boolean
              default: false
            add_required_words:
              type: array
              items:
                type: string
        ban_words_from_post_title:
          type: object
          properties:
            flag:
              type: boolean
              default: false
            add_banned_words:
              type: array
              items:
                type: string
        ban_words_from_post_body:
          type: object
          properties:
            flag:
              type: boolean
              default: false
            add_banned_words:
              type: string
        require_or_ban_links_from_specific_domains:
          type: object
          properties:
            flag:
              type: boolean
              default: false
            restriction_type:
              type: string
              enum: ["required_domains", "blocked_domains"]
            require_or_block_link_posts_with_these_domains:
              type: string
        restrict_how_often_the_same_link_can_be_posted:
          type: object
          properties:
            flag:
              type: boolean
              default: false
            number_of_days:
              type: integer
              minimum: 0
        allow_posts_to_have_body_text:
          type: string
          enum:
            [
              "Text body is optional for all post types",
              "Text body is required for text-only posts",
              "Text body is not allowed",
            ]
        restrict_post_title_length:
          type: object
          properties:
            minimum_length:
              type: integer
              minimum: 0
            maximum_length:
              type: integer
              minimum: 0
        use_title_text_RegEx_requirements:
          type: object
          properties:
            flag:
              type: boolean
              default: false
            RegEx_pattern:
              type: array
              items:
                type: string
        use_body_text_RegEx_requirements:
          type: object
          properties:
            flag:
              type: boolean
              default: false
            RegEx_pattern:
              type: array
              items:
                type: string

    ################################################## Community - Posts and Comments Schema Schema ##################################################
    community_posts_and_comments_schema:
      type: object
      properties:
        posts:
          type: object
          properties:
            post_type_options:
              type: string
              enum: ["Any", "Links Only", "Text Posts Only"]
            allow_crossposting_of_posts:
              type: boolean
              default: true
            archive_posts:
              type: boolean
              default: false
            enable_spoiler_tag:
              type: boolean
              default: true
            allow_image_uploads_and_links_to_image_hosting_sites:
              type: boolean
              default: true
            allow_multiple_images_per_post:
              type: boolean
              default: true
            allow_polls:
              type: boolean
              default: true
            spam_filter_strength:
              type: object
              properties:
                posts:
                  type: string
                  enum: ["low", "high (default)", "all"]
                links:
                  type: string
                  enum: ["low", "high (default)", "all"]
                comments:
                  type: string
                  enum: ["low (default)", "high", "all"]
        comments:
          type: object
          properties:
            suggested_sort:
              type: string
              enum:
                [
                  "None (Recommended)",
                  "Best",
                  "Old",
                  "Top",
                  "Q&A",
                  "Live (Beta)",
                  "Controversial",
                  "New",
                ]
            collapse_deleted_and_removed_comments:
              type: boolean
              default: true
            minutes_to_hide_comment_scores:
              type: number
              minimum: 0
            media_in_comments:
              type: object
              properties:
                gifs_from_giphy:
                  type: boolean
                  default: true
                collectible_expressions:
                  type: boolean
                  default: true
                images:
                  type: boolean
                  default: true
                gifs:
                  type: boolean
                  default: true

    ################################################## Community Schema ##################################################
    community_schema:
      required:
        - created_at
        - name
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          default: (current date-time)
        name:
          type: string
          description: The name of the community is unique and cannot be changed.
        title:
          type: string
        type:
          type: string
          enum: ["public", "private", "restricted", "employee only"]
        category:
          type: string
        nsfw_flag:
          type: boolean
          default: false
        profile_picture:
          type: string
        banner_picture:
          type: string
        members_nickname:
          type: string
          default: "Members"
        currently_viewing_nickname:
          type: string
          default: "Online"
        general_settings:
          $ref: "#/components/schemas/community_general_settings_schema"
        content_controls:
          $ref: "#/components/schemas/community_content_controls_schema"
        posts_and_comments:
          $ref: "#/components/schemas/community_posts_and_comments_schema"
        traffic:
          type: string
        topics:
          type: string
        owner:
          type: string
        views_count:
          type: integer
          minimum: 0
          default: 0
        moderators:
          type: array
          items:
            type: string
        invited_moderators:
          type: array
          items:
            type: string
        approved_users:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              approved_at:
                type: string
                format: date-time
                default: now
        muted_users:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              muted_by_id:
                type: string
              mute_date:
                type: string
                format: date-time
              mute_reason:
                type: string
        banned_users:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              username:
                type: string
              banned_date:
                type: string
                format: date-time
              reason_for_ban:
                type: string
                enum: ["none", "rule", "spam", "personal", "threat", "others"]
              mod_note:
                type: string
              permanent_flag:
                type: boolean
                default: true
              banned_until:
                type: string
                format: date-time
              note_for_ban_message:
                type: string
        removed_posts_ids:
          type: array
          items:
            type: string
        removed_comments_ids:
          type: array
          items:
            type: string
        edited_posts_ids:
          type: array
          items:
            type: string
        edited_comments_ids:
          type: array
          items:
            type: string
        unmoderated_posts_ids:
          type: array
          items:
            type: string
        unmoderated_comments_ids:
          type: array
          items:
            type: string
        reported_posts_ids:
          type: array
          items:
            type: string
        reported_comments_ids:
          type: array
          items:
            type: string
        scheduled_posts:
          type: array
          items:
            type: object
            properties:
              post_id:
                type: string
              submit_date:
                type: string
                format: date-time
              submitted_flag:
                type: boolean
                default: false
              submit_time:
                type: string
                format: date-time
              time_zone:
                type: string
                format: date-time
              title:
                type: string
              repeat_options:
                type: string
                enum:
                  [
                    "does_not_repeat",
                    "hourly",
                    "daily",
                    "weekly_on_day",
                    "monthly_on_date",
                  ]
              repeat_every:
                type: object
                properties:
                  number:
                    type: integer
                  duration:
                    type: string
                    enum: ["hours", "days", "weeks", "months"]
              advanced_options:
                type: object
                properties:
                  default_comment_order:
                    type: string
                    enum:
                      [
                        "Default comment order",
                        "Best",
                        "Top",
                        "New",
                        "Controversial",
                        "Old",
                        "Q&A",
                      ]
                  not_a_sticky_post:
                    type: string
                    enum:
                      [
                        "not_a_sticky_post",
                        "submit_as_first_sticky_post",
                        "submit_as_second_sticky_post",
                      ]
              contest_mode_flag:
                type: boolean
                default: false
              post_as_auto_moderator_flag:
                type: boolean
                default: false
        allow_image_posts:
          type: boolean
          default: true
        allow_url_posts:
          type: boolean
          default: true
        allow_polls_posts:
          type: boolean
          default: true
        rules_ids:
          type: array
          items:
            type: string

    ################################################## Post Schema ##################################################
    Post:
      type: object
      required:
        - title
        - body
      properties:
        title:
          type: string
          description: The title of the post
        description:
          type: string
          description: The body content of the post

paths:
  /communities/get-rules/{community_name}: #done
    get:
      tags:
        - Communities
      operationId: get_rules
      parameters:
        - name: community_name
          in: path
          description: Name of the community
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Rule"

  /communities/add-rule: #done
    post:
      tags:
        - Communities
      description: applies_to options are only one of those
        {posts_and_comments
        , posts_only
        , comments_only}
        rule_id and community_name are required .
      operationId: add-rule
      requestBody:
        description: rule
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RuleWithoutOrder"
      responses:
        "200":
          description: Success
        "500":
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      status:
                        type: integer
                        format: int32
                        example: 500
                      message:
                        type: string
                        example: Internal Server Error
  /communities/edit-rule: #done
    post:
      tags:
        - Communities
      operationId: edit_rule

      requestBody:
        description: rule
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRule"
      responses:
        "200":
          description: Success
        "500":
          description: rule title exists
  /communities/delete-rule/: #done
    post:
      tags:
        - Communities
      operationId: delete-rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_name:
                  type: string
                  description: Name of the community
                rule_id:
                  type: string

      responses:
        "200":
          description: Rule deleted successfully
        "500":
          description: rule id doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      status:
                        type: integer
                        format: int32
                        example: 500
                      message:
                        type: string
                        example: Internal Server Error

  /communities/about/approved-users/{community_name}:
    get:
      tags:
        - Communities
      operationId: approved_users
      parameters:
        - name: community_name
          in: path
          description: Name of the community
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        profile_picture:
                          type: string
                          description: URL of the user's profile     picture
                        username:
                          type: string
                          description: Username of the user
                        approved_at:
                          type: string
                          format: date-time
                          description: Date and time when the user was approved
        "500":
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      status:
                        type: integer
                        format: int32
                        example: 500
                      message:
                        type: string
                        example: Internal Server Error

  /communities/add-banner-picture:
    post:
      tags:
        - Communities
      requestBody:
        description: banner picture path and community name
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_name:
                  type: string
                profile_picture:
                  type: string
              required:
                - community_name
                - banner_picture
      responses:
        "200":
          description: Success

        "500":
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      status:
                        type: integer
                        format: int32
                        example: 500
                      message:
                        type: string
                        example: Internal Server Error
  /communities/delete-banner-picture:
    post:
      tags:
        - Communities
      operationId: delete-community-banner-picture
      requestBody:
        description: banner picture path and community name
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_name:
                  type: string
                banner_picture:
                  type: string
              required:
                - community_name
                - profile_picture
      responses:
        "200":
          description: Success

        "500":
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      status:
                        type: integer
                        format: int32
                        example: 500
                      message:
                        type: string
                        example: Internal Server Error
  /communities/add-profile-picture:
    post:
      tags:
        - Communities
      operationId: add-community-profile-picture
      requestBody:
        description: Profile picture path and community name
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_name:
                  type: string
                profile_picture:
                  type: string
              required:
                - community_name
                - profile_picture
      responses:
        "200":
          description: Success

        "500":
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      status:
                        type: integer
                        format: int32
                        example: 500
                      message:
                        type: string
                        example: Internal Server Error
  /communities/delete-profile-picture:
    post:
      tags:
        - Communities
      operationId: delete_profile_picture
      requestBody:
        description: Community name
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_name:
                  type: string
              required:
                - community_name
      responses:
        "200":
          description: sucess

        "500":
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      status:
                        type: integer
                        format: int32
                        example: 500
                      message:
                        type: string
                        example: Internal Server Error

  /communities/approve-user:
    post:
      tags:
        - Communities
      operationId: approve_user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_name:
                  type: string
                username:
                  type: string
                  description: username of the user to approve
              required:
                - community_name
      responses:
        "200":
          description: sucess
        "400":
          description: username not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      status:
                        type: integer
                        format: int32
                        example: 400
                      message:
                        type: string
                        example: Internal Server Error

        "500":
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      status:
                        type: integer
                        format: int32
                        example: 500
                      message:
                        type: string
                        example: Internal Server Error

  /communities/add-community:
    post:
      tags:
        - Communities
      summary: Add a new community
      operationId: addCommunity
      requestBody:
        description: Community object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/community_schema"
        required: true
      responses:
        "201":
          description: Community was successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/community_schema"
        "400":
          description: Community name is already taken
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string

  ################################################## Get Settings ##################################################
  /communities/get-general-settings/{community_name}:
    get:
      tags:
        - Communities
      summary: Get general settings of a community
      operationId: getCommunityGeneralSettings
      parameters:
        - name: community_name
          in: path
          description: Name of the community to retrieve general settings
          required: true
          schema:
            type: string
      responses:
        "200":
          description: General settings of the community
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/community_general_settings_schema"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string
  /communities/get-content-controls/{community_name}:
    get:
      tags:
        - Communities
      summary: Get content controls of a community
      operationId: getCommunityContentControls
      parameters:
        - name: community_name
          in: path
          description: Name of the community to retrieve content controls
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Content controls of the community
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/community_content_controls_schema"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string
  /communities/get-posts-and-comments/{community_name}:
    get:
      tags:
        - Communities
      summary: Get posts and comments settings of a community
      operationId: getCommunityPostsCommentsSettings
      parameters:
        - name: community_name
          in: path
          description: Name of the community to retrieve posts and comments settings
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Posts and comments settings of the community
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/community_posts_and_comments_schema"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string

  ################################################## Change Settings ##################################################
  /communities/change-general-settings/{community_name}:
    post:
      tags:
        - Communities
      summary: Change general settings of a community
      operationId: changeCommunityGeneralSettings
      parameters:
        - name: community_name
          in: path
          description: Name of the community to change general settings
          required: true
          schema:
            type: string
      requestBody:
        description: New general settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/community_general_settings_schema"
        required: true
      responses:
        "200":
          description: Updated general settings of the community
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/community_general_settings_schema"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string
  /communities/change-content-controls/{community_name}:
    post:
      tags:
        - Communities
      summary: Change content controls of a community
      operationId: changeCommunityContentControls
      parameters:
        - name: community_name
          in: path
          description: Name of the community to change content controls
          required: true
          schema:
            type: string
      requestBody:
        description: New content controls
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/community_content_controls_schema"
        required: true
      responses:
        "200":
          description: Updated content controls of the community
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/community_content_controls_schema"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string
  /communities/change-posts-and-comments/{community_name}:
    post:
      tags:
        - Communities
      summary: Change posts and comments settings of a community
      operationId: changeCommunityPostsCommentsSettings
      parameters:
        - name: community_name
          in: path
          description: Name of the community to change posts and comments settings
          required: true
          schema:
            type: string
      requestBody:
        description: New posts and comments settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/community_posts_and_comments_schema"
        required: true
      responses:
        "200":
          description: Updated posts and comments settings of the community
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/community_posts_and_comments_schema"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string

  ################################################## Posts Retrieval ##################################################
  /communities/add-post/{community_name}:
    post:
      tags:
        - Communities
      summary: Add a post to a specific community
      operationId: addPostToCommunity
      parameters:
        - name: community_name
          in: path
          description: Name of the community to add the post to
          required: true
          schema:
            type: string
      requestBody:
        description: Post to be added to the community
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
        required: true
      responses:
        "201":
          description: Post successfully added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string
  /communities/get-posts-by-category/{category}:
    get:
      tags:
        - Communities
      summary: Get posts by community category
      operationId: getPostsByCommunityCategory
      parameters:
        - name: category
          in: path
          description: Category of the community to get posts from
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Posts successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string

  ################################################## Statistics ##################################################
  /communities/get-members-count/{community_name}:
    get:
      tags:
        - Communities
      summary: Get the member count of a specific community
      operationId: getCommunityMembersCount
      parameters:
        - name: community_name
          in: path
          description: Name of the community to get the member count from
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Member count successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  members_count:
                    type: integer
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string
